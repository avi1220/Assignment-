1-  C) %
 
2-  B) 0

3-  C) 24

4-  A) 2

5-  6

6-  C) the finally block will be executed no matter if the try block raises an error or not

7-  A) It is used to raise an exception

8-  C) in defining a generator

9-  A) _abc  C) abc2

10- A) yield  B) raise

11-- FACTORIAL OF A NUMBER

num = int(input("Enter a number: "))  
factorial = 1  
if num < 0:  
   print("Sorry, factorial does not exist for negative numbers")  
elif num == 0:  
   print("The factorial of 0 is 1")  
else:  
   for i in range(1,num + 1):  
       factorial = factorial*i  
   print("The factorial of",num,"is",factorial) 

12--- A NUMBER IS PRIME OR COMPOSITE--------

num = int(input("Enter a number: "))  
  
if num > 1:  
   for i in range(2,num):  
       if (num % i) == 0:  
           print(num,"is not a prime number")    
           break  
   else:  
       print(num,"is a prime number")  


13---  STRING IS PALINDROME OR NOT

my_str = str(input('enter string :'))
my_str = my_str.casefold()
rev_str = reversed(my_str)
if list(my_str) == list(rev_str):
   print("The string is a palindrome.")
else:
   print("The string is not a palindrome.")


14--- the third side of right-angled triangle from two given sides

from math import sqrt
print("Input lengths of shorter triangle sides:")
a = float(input("a: "))
b = float(input("b: "))
c = sqrt(a**2 + b**2)
print("The length of the hypotenuse is", c )


15--- THE FREQUENCY OF EACH OF CHARACTERS PRESENT IN A GIVEN STRING


string = str(input('enter string :'))  
freq = [None] * len(string);  
   
for i in range(0, len(string)):  
    freq[i] = 1;  
    for j in range(i+1, len(string)):  
        if(string[i] == string[j]):  
            freq[i] = freq[i] + 1;  
            string = string[ : j] + '0' + string[j+1 : ];  
print("Characters and their corresponding frequencies");  
for i in range(0, len(freq)):  
    if(string[i] != ' ' and string[i] != '0'):  
        print(string[i] + "-" + str(freq[i]));   